version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: yourdatabase
    ports:
      - '5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  url-shortener:
    build:
      context: .
      dockerfile: ./services/url-shortener/Dockerfile
    command: sh -c "yarn migration:run && yarn run start:dev"
    volumes:
      - ./services/url-shortener:/app
      - /app/node_modules
      - /node_modules
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: youruser
      DATABASE_PASSWORD: yourpassword
      DATABASE_NAME: yourdatabase
      BASE_URL: http://localhost:8000/
    depends_on:
      - postgres
    networks:
      - app-network

  auth-service:
    build:
      context: .
      dockerfile: ./services/auth-service/Dockerfile
    command: yarn run start:dev
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
      - /node_modules
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: youruser
      DATABASE_PASSWORD: yourpassword
      DATABASE_NAME: yourdatabase
      JWT_SECRET: your_jwt_secret
    depends_on:
      - postgres
    networks:
      - app-network

  kong:
    image: kong:3.0
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      JWT_SECRET: your_jwt_secret
    volumes:
      - ./kong/declarative:/usr/local/kong/declarative
    ports:
      - '8000:8000'
      - '8001:8001'
    depends_on:
      - auth-service
      - url-shortener
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
